{"version":3,"sources":["color.js","App.js","index.js"],"names":["COLOR_ARRAY","App","useState","responseData","setResponseData","errors","setErrors","bgColor","setBgColor","fetchData","a","randomInteger","Math","floor","length","random","fetch","json","then","res","catch","err","useEffect","console","log","className","style","backgroundColor","Card","id","color","content","author","href","encodeURI","Button","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAWeA,EAXK,CAAC,UAAW,UAAW,UAAW,UAAW,UAC7D,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,W,OCoCjCC,MAtCf,WAAgB,IAAD,EAC6BC,mBAAS,IADtC,mBACJC,EADI,KACUC,EADV,OAEiBF,mBAAS,MAF1B,mBAEJG,EAFI,KAEIC,EAFJ,OAGmBJ,mBAAS,WAH5B,mBAGJK,EAHI,KAGKC,EAHL,cAKIC,IALJ,2EAKX,4BAAAC,EAAA,6DACQC,EAAgBC,KAAKC,MAAMb,EAAYc,OAASF,KAAKG,UACzDP,EAAWR,EAAYW,IAF3B,SAGsBK,MAAM,kCAH5B,cAKOC,OACAC,MAAK,SAAAC,GAAG,OAAIf,EAAgBe,MAC5BC,OAAM,SAAAC,GAAG,OAAIf,EAAUe,MAP9B,4CALW,sBAqBb,OANEC,qBAAU,WACRb,MACA,IAEFc,QAAQC,IAAInB,GAGV,qBAAKoB,UAAU,OAAOC,MAAO,CAACC,gBAAiBpB,GAA/C,SACE,eAACqB,EAAA,EAAD,CAAMC,GAAG,YAAT,UACI,oBAAGA,GAAG,OAAOH,MAAO,CAACI,MAAOvB,GAA5B,UAAsC,cAAC,IAAD,IAAoBJ,EAAa4B,WACvE,oBAAGF,GAAG,SAASH,MAAO,CAACI,MAAOvB,GAA9B,cAA0CJ,EAAa6B,UACvD,sBAAKP,UAAU,iBAAf,UACE,mBAAGI,GAAG,cAAcI,KAAMC,UAAU,wCAAD,OAAyC/B,EAAa4B,QAAtD,aAAkE5B,EAAa6B,SAAlH,SAA6H,cAAC,IAAD,CAAaN,MAAO,CAACC,gBAAiBpB,EAASuB,MAAO,aACnL,cAACK,EAAA,EAAD,CAAQN,GAAG,YAAYH,MAAO,CAACC,gBAAiBpB,GAAU6B,QAAS,kBAAM3B,KAAzE,gCC9Bd4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ebbbd0ed.chunk.js","sourcesContent":["const COLOR_ARRAY = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \n\t\t  '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\n\t\t  '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \n\t\t  '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\n\t\t  '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \n\t\t  '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\n\t\t  '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \n\t\t  '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\n\t\t  '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \n\t\t  '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\n\nexport default COLOR_ARRAY;","import './App.css';\nimport {useState, useEffect} from 'react';\nimport { Card, Button } from '@material-ui/core';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport COLOR_ARRAY from './color'\n\nfunction App() {\n    const [responseData, setResponseData] = useState({});\n    const [errors, setErrors] = useState(null);\n    const [bgColor, setBgColor] = useState('#991AFF');\n    \n    async function fetchData() {\n        let randomInteger = Math.floor(COLOR_ARRAY.length * Math.random())\n        setBgColor(COLOR_ARRAY[randomInteger])\n        const res = await fetch(\"https://api.quotable.io/random\");\n        res\n          .json()\n          .then(res => setResponseData(res))\n          .catch(err => setErrors(err));\n      }\n\n    useEffect(() => {\n      fetchData();\n    },[])\n\n    console.log(errors);\n    \n  return (\n      <div className='body' style={{backgroundColor: bgColor}}>\n        <Card id=\"quote-box\">\n            <p id=\"text\" style={{color: bgColor}}><FormatQuoteIcon />{responseData.content}</p>\n            <p id=\"author\" style={{color: bgColor}}>-{responseData.author}</p>\n            <div className='button-twitter'>\n              <a id=\"tweet-quote\" href={encodeURI(`http://twitter.com/intent/tweet?text=${responseData.content} -${responseData.author}`)}><TwitterIcon style={{backgroundColor: bgColor, color: 'white'}} /></a>\n              <Button id=\"new-quote\" style={{backgroundColor: bgColor}} onClick={() => fetchData()}>\n                New quote\n              </Button>\n            </div>\n        </Card>\n      </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}