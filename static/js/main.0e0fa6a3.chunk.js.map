{"version":3,"sources":["App.js","index.js"],"names":["styles","container","display","justifyContent","alignItems","height","backgroundColor","quoteBox","position","flexDirection","color","fontSize","border","flexWrap","App","useState","responseData","setResponseData","errors","setErrors","fetchData","a","fetch","json","then","res","catch","err","useEffect","console","log","quote","className","style","Card","id","content","author","href","Button","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAwCA,IAAMA,EAAS,CACXC,UAAU,CACVC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QACRC,gBAAiB,aAEjBC,SAAS,CACTC,SAAU,QACVC,cAAe,SAGfC,MAAO,SACPC,SAAU,OACVC,OAAQ,mBACRC,SAAU,SAICC,EAvDf,WAAgB,IAAD,EAC6BC,mBAAS,IADtC,mBACJC,EADI,KACUC,EADV,OAEiBF,mBAAS,MAF1B,mBAEJG,EAFI,KAEIC,EAFJ,cAIIC,IAJJ,2EAIX,sBAAAC,EAAA,sEACsBC,MAAM,kCAD5B,cAGOC,OACAC,MAAK,SAAAC,GAAG,OAAIR,EAAgBQ,MAC5BC,OAAM,SAAAC,GAAG,OAAIR,EAAUQ,MAL9B,4CAJW,sBAoBb,OAREC,qBAAU,WACNR,MACF,IAEFS,QAAQC,IAAId,EAAae,OACzBF,QAAQC,IAAId,EAAae,OACzBF,QAAQC,IAAIZ,GAGV,qBAAKc,UAAU,OAAOC,MAAOjC,EAAOC,UAApC,SACE,eAACiC,EAAA,EAAD,CAAMC,GAAG,YAAYF,MAAO,CAAC3B,gBAAiB,SAA9C,UACI,oBAAG6B,GAAG,OAAOF,MAAO,CAACtB,SAAU,OAAQD,MAAM,QAA7C,UAAsD,cAAC,IAAD,IAAoBM,EAAaoB,WACvF,oBAAGD,GAAG,SAASF,MAAO,CAAC9B,eAAgB,QAASQ,SAAU,OAAQD,MAAO,QAAzE,cAAoFM,EAAaqB,UACjG,gCACA,mBAAGF,GAAG,cAAcG,KAAK,6BACzB,cAACC,EAAA,EAAD,CAAQJ,GAAG,YAAYF,MAAO,CAACvB,MAAO,QAAS8B,QAAS,kBAAMpB,KAA9D,gCC3BZqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0e0fa6a3.chunk.js","sourcesContent":["import './App.css';\nimport {useState, useEffect} from 'react';\nimport { Card, Button } from '@material-ui/core';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\n\nfunction App() {\n    const [responseData, setResponseData] = useState({});\n    const [errors, setErrors] = useState(null);\n    \n    async function fetchData() {\n        const res = await fetch(\"https://api.quotable.io/random\");\n        res\n          .json()\n          .then(res => setResponseData(res))\n          .catch(err => setErrors(err));\n      }\n\n    useEffect(() => {\n        fetchData();\n    },[])\n\n    console.log(responseData.quote);\n    console.log(responseData.quote);\n    console.log(errors);\n    \n  return (\n      <div className='body' style={styles.container}>\n        <Card id=\"quote-box\" style={{backgroundColor: 'white'}}>\n            <p id=\"text\" style={{fontSize: '2rem', color:'aqua'}}><FormatQuoteIcon />{responseData.content}</p>\n            <p id=\"author\" style={{justifyContent: 'right', fontSize: '1rem', color: 'aqua'}}>-{responseData.author}</p>\n            <div >\n            <a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\"></a>\n            <Button id=\"new-quote\" style={{color: 'aqua'}} onClick={() => fetchData()}>\n                New quote\n            </Button>\n            </div>\n        </Card>\n      </div>\n  );\n}\nconst styles = {\n    container:{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    backgroundColor: 'aquamarin',\n    },\n    quoteBox:{\n    position: 'fixed',\n    flexDirection: 'column',\n    // justifyContent: 'center',\n    // alignItems: 'center',\n    color: 'purple',\n    fontSize: '20px',\n    border: '2px solid purple',\n    flexWrap: 'wrap'\n    }\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}